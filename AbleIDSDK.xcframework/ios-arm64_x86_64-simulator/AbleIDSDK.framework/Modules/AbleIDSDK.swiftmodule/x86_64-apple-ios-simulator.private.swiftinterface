// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name AbleIDSDK
import AVKit
@_exported import AbleIDSDK
import DeveloperToolsSupport
import FaceSDK
import Foundation
import QuartzCore
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct Transaction {
  public init(attemptId: Swift.String, baseUrl: Swift.String)
}
public struct AbleIdLivenessResponse {
  public let transactionId: Swift.String?
  public let estimatedAge: Foundation.NSNumber?
  public let status: Swift.UInt?
  public let tag: Swift.String?
  public let error: Foundation.NSError?
}
public enum AbleLocale {
  case uzbek
  case russian
  case english
  case preferred
  public static func == (a: AbleIDSDK.AbleLocale, b: AbleIDSDK.AbleLocale) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum AbleIdLivenessError : Swift.Error {
  case userCancellationError
  case ableLivenessProcessingError
  case ableInstructionsLoadError
  case ableInitializationError
  case ableCompletionRequestError
  public var errorDescription: Swift.String? {
    get
  }
  public static func == (a: AbleIDSDK.AbleIdLivenessError, b: AbleIDSDK.AbleIdLivenessError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public typealias LivenessResult = Swift.Result<AbleIDSDK.AbleIdLivenessResponse, AbleIDSDK.AbleIdLivenessError>
@_hasMissingDesignatedInitializers final public class AbleID {
  public static let service: AbleIDSDK.AbleID
  final public func configure(with configuration: AbleIDSDK.AbleIdConfiguration)
  final public func startLiveness(from controller: UIKit.UIViewController, transaction: AbleIDSDK.Transaction, locale: AbleIDSDK.AbleLocale = .preferred, completion: @escaping (AbleIDSDK.LivenessResult) -> ())
  @objc deinit
}
public struct AbleIdConfiguration {
  public init(screenBackgroundColor: UIKit.UIColor, buttonBackgroundColor: UIKit.UIColor, buttonTitleColor: UIKit.UIColor, livenessSectorTargetColor: UIKit.UIColor)
}
extension AbleIDSDK.AbleLocale : Swift.Equatable {}
extension AbleIDSDK.AbleLocale : Swift.Hashable {}
extension AbleIDSDK.AbleIdLivenessError : Swift.Equatable {}
extension AbleIDSDK.AbleIdLivenessError : Swift.Hashable {}
